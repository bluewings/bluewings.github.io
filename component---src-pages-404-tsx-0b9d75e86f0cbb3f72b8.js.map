{"version":3,"sources":["webpack:///./src/components/Toggle/Toggle.tsx","webpack:///./src/components/Toggle/index.ts","webpack:///./src/components/Footer/Footer.tsx","webpack:///./src/components/Footer/index.ts","webpack:///./src/components/Layout/Layout.tsx","webpack:///./src/components/Layout/index.ts","webpack:///./src/components/SEO/SEO.tsx","webpack:///./src/components/SEO/index.ts","webpack:///./src/pages/404.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.ts","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["useTheme","_useContext","useContext","ThemeContext","theme","setTheme","_useState","useState","window","__getPreferredTheme","err","hasPreferred","setHasPreferred","rotate","useRef","useMemo","remain","Math","abs","current","transform","newTheme","__toggleTheme","Toggle","_useTheme","toggleStyle","toggleTheme","button","react_default","a","createElement","type","className","styles","root","onClick","spinner","style","sun","xmlns","viewBox","d","moon","es","placement","visible","overlay","tooltipText","arrowContent","Footer","gatsby_browser_entry","query","detailsQuery","render","data","social","site","siteMetadata","links","Object","keys","filter","name","map","uri","marginTop","rhythm","link","i","react","key","Fragment","href","target","rel","_3346284184","Layout","props","header","location","lang","title","children","maxWidth","isIndexPage","pathname","_objectSpread","scale","marginBottom","boxShadow","textDecoration","color","to","inner","marginLeft","marginRight","padding","components_Toggle","components_Footer","SEO","_ref","description","meta","keywords","metaDescription","Helmet_default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","_1025518380","defaultProps","__webpack_require__","r","__webpack_exports__","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_Layout__WEBPACK_IMPORTED_MODULE_1__","_components_SEO__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","siteTitle","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","finalData","Consumer","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","body","fontFamily","h1,h2,h3,h4,h5,h6","fontWeight","wordBreak","p",".date","googleFonts","typography","Typography","m","module","exports","require","default","ProdPageRenderer","pageResources","InternalPageRenderer","json"],"mappings":"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","file":"component---src-pages-404-tsx-0b9d75e86f0cbb3f72b8.js","sourcesContent":["import React, { useContext, useRef, useMemo, useState } from 'react';\nimport Tooltip from 'rc-tooltip';\nimport { Context as ThemeContext } from '../../utils/theme-context';\nimport styles from './Toggle.module.scss';\n\nfunction __toggleTheme() {\n  try {\n    // @ts-ignore\n    return window.__toggleTheme();\n  } catch (err) {\n    /* ignore */\n  }\n  return '';\n}\n\nfunction __getPreferredTheme() {\n  try {\n    // @ts-ignore\n    return window.__getPreferredTheme();\n  } catch (err) {\n    /* ignore */\n  }\n  return '';\n}\n\nfunction useTheme() {\n  const { theme, setTheme }: any = useContext(ThemeContext);\n\n  const [hasPreferred, setHasPreferred] = useState(!!__getPreferredTheme());\n\n  const rotate = useRef(0);\n\n  const toggleStyle = useMemo(() => {\n    const remain = Math.abs(rotate.current % 360);\n    if ((theme === 'light' && remain === 0) || (theme === 'dark' && remain === 180)) {\n      rotate.current -= 180;\n    }\n    return { transform: `rotate(${rotate.current}deg)` };\n  }, [theme]);\n\n  const toggleTheme: any = () => {\n    const newTheme = __toggleTheme();\n    setHasPreferred(true);\n    setTheme(newTheme);\n  };\n\n  return [toggleStyle, toggleTheme, hasPreferred];\n}\n\nconst Toggle = () => {\n  const [toggleStyle, toggleTheme, hasPreferred] = useTheme();\n\n  const button = (\n    <button type=\"button\" className={styles.root} onClick={toggleTheme}>\n      <div className={styles.spinner} style={toggleStyle}>\n        <svg className={styles.sun} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n          <path d=\"M277.3 32h-42.7v64h42.7V32zm129.1 43.7L368 114.1l29.9 29.9 38.4-38.4-29.9-29.9zm-300.8 0l-29.9 29.9 38.4 38.4 29.9-29.9-38.4-38.4zM256 128c-70.4 0-128 57.6-128 128s57.6 128 128 128 128-57.6 128-128-57.6-128-128-128zm224 106.7h-64v42.7h64v-42.7zm-384 0H32v42.7h64v-42.7zM397.9 368L368 397.9l38.4 38.4 29.9-29.9-38.4-38.4zm-283.8 0l-38.4 38.4 29.9 29.9 38.4-38.4-29.9-29.9zm163.2 48h-42.7v64h42.7v-64z\" />\n        </svg>\n        <svg className={styles.moon} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n          <path d=\"M195 125c0-26.3 5.3-51.3 14.9-74.1C118.7 73 51 155.1 51 253c0 114.8 93.2 208 208 208 97.9 0 180-67.7 202.1-158.9-22.8 9.6-47.9 14.9-74.1 14.9-106 0-192-86-192-192z\" />\n        </svg>\n      </div>\n    </button>\n  );\n\n  return (\n    <div>\n      {!hasPreferred ? (\n        <Tooltip\n          placement=\"bottom\"\n          visible\n          overlay={<span className={styles.tooltipText}>Dark Mode</span>}\n          arrowContent={<div className=\"rc-tooltip-arrow-inner\" />}\n        >\n          {button}\n        </Tooltip>\n      ) : (\n        button\n      )}\n    </div>\n  );\n};\n\nexport default Toggle;\n","import Toggle from './Toggle';\n\nexport default Toggle;\n","import React, { Fragment } from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport { rhythm } from '../../utils/typography';\n\nfunction Footer() {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={(data) => {\n        const { social } = data.site.siteMetadata;\n        const links = Object.keys(social)\n          .filter((name) => social[name])\n          .map((name) => ({ name, uri: social[name] }));\n        return (\n          <footer style={{ marginTop: rhythm(2) }}>\n            {links.map((link, i) => {\n              return (\n                <Fragment key={link.name}>\n                  {i > 0 && <> &bull; </>}\n                  <a href={link.uri} target=\"_blank\" rel=\"noopener noreferrer\">\n                    {link.name}\n                  </a>\n                </Fragment>\n              );\n            })}\n          </footer>\n        );\n      }}\n    />\n  );\n}\n\nexport default Footer;\n\nconst detailsQuery = graphql`\n  query FooterQuery {\n    site {\n      siteMetadata {\n        social {\n          twitter\n          github\n          stackOverflow\n          facebook\n        }\n      }\n    }\n  }\n`;\n","import Footer from './Footer';\n\nexport default Footer;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport { rhythm, scale } from '../../utils/typography';\nimport Toggle from '../Toggle';\nimport Footer from '../Footer';\nimport styles from './Layout.module.scss';\nimport '../../styles/common.css';\nimport '../../styles/tooltip.scss';\n\nfunction Layout(props: any) {\n  const { location, lang, title, children, maxWidth, isIndexPage } = props;\n  // @ts-ignore\n  const rootPath = `${__PATH_PREFIX__}/`;\n  let header;\n\n  if (location.pathname === rootPath || isIndexPage) {\n    header = (\n      <h1\n        style={{\n          ...scale(1.5),\n          marginBottom: rhythm(1.5),\n          marginTop: 0,\n        }}\n      >\n        <Link\n          style={{\n            boxShadow: `none`,\n            textDecoration: `none`,\n            color: `inherit`,\n          }}\n          to=\"/\"\n        >\n          {title}\n        </Link>\n      </h1>\n    );\n  } else {\n    header = (\n      <h3\n        style={{\n          marginTop: 0,\n        }}\n      >\n        <Link\n          style={{\n            boxShadow: `none`,\n            textDecoration: `none`,\n            color: `inherit`,\n          }}\n          to={`/${lang ? lang + '/' : ''}`}\n        >\n          {title}\n        </Link>\n      </h3>\n    );\n  }\n  return (\n    <div className={styles.root}>\n      <div\n        className={styles.inner}\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: maxWidth || rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>\n          {header}\n          <Toggle />\n        </header>\n        <main>{children}</main>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import Layout from './Layout';\n\nexport default Layout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }: any) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={(data) => {\n        const metaDescription = description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : [],\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  description: '',\n  lang: `en`,\n  meta: [],\n  keywords: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n","import SEO from './SEO';\n\nexport default SEO;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\n\nfunction NotFoundPage(props: any) {\n  const { data, location } = props;\n  const siteTitle = data.site.siteMetadata.title;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"404: Not Found\" />\n      <h1>Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  );\n}\n\nexport default NotFoundPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import Typography from 'typography';\nimport Wordpress2016 from 'typography-theme-wordpress-2016';\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n    },\n    body: {\n      // fontFamily: `Merriweather, 'Noto Serif KR', Georgia, serif`,\n      fontFamily: `'Open Sans', 'Gothic A1', 'Apple SD Gothic NEO', helvetica, sans-serif`,\n    },\n    'h1,h2,h3,h4,h5,h6': {\n      fontFamily: `Montserrat, Black Han Sans`,\n      fontWeight: 'normal',\n      wordBreak: 'keep-all',\n    },\n    p: {\n      wordBreak: 'keep-all',\n    },\n    '.date': {\n      fontFamily: `'Montserrat SemiBold', 'Apple SD Gothic NEO', helvetica, sans-serif`,\n    },\n  };\n};\n\ndelete Wordpress2016.googleFonts;\n\nconst typography = new Typography(Wordpress2016);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles();\n}\n\nconst { rhythm, scale } = typography;\n\nexport default typography;\nexport { rhythm, scale };\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}