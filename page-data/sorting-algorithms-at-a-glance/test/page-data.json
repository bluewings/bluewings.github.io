{"componentChunkName":"component---node-modules-gatsby-plugin-bluewings-src-templates-post-query-js","path":"/sorting-algorithms-at-a-glance/test/","result":{"data":{"site":{"siteMetadata":{"title":[["ko","아빠는 개발자"],["en","Dev Dad"]],"social":[{"name":"GitHub","url":"https://github.com/bluewings"},{"name":"GitHub","url":"https://github.com/gatsbyjs"}]}},"blogPost":{"id":"6dd90293-74af-56f7-810f-bee4d5fc0e34","excerpt":"dfskfjskdf 버블 정렬  bubble sort 선택 정렬  selection sort 삽입 정렬  insertion sort dfskfjskdf 시각화 구현 정렬 함수를 시각화하기 위해 y dfskfjskdf…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"한눈에 보는 단순 정렬 알고리즘\",\n  \"date\": \"2020-08-31T11:35:59.054Z\",\n  \"max_width\": \"50rem\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"dfskfjskdf\"), mdx(Bluewings.DataProvider, null, mdx(Bluewings.Row, null, mdx(Bluewings.Column, {\n    args: [\"4\"],\n    layoutFixed: true,\n    xs: undefined,\n    style: {}\n  }, mdx(\"h2\", {\n    style: {\n      textAlign: 'center',\n      margin: '1rem'\n    }\n  }, \"\\uBC84\\uBE14 \\uC815\\uB82C\"), mdx(SorterControl, {\n    algorithm: \"bubble\",\n    height: 220,\n    mdxType: \"SorterControl\"\n  })), mdx(Bluewings.Column, {\n    args: [\"4\"],\n    layoutFixed: true,\n    xs: undefined,\n    style: {}\n  }, mdx(\"h2\", {\n    style: {\n      textAlign: 'center',\n      margin: '1rem'\n    }\n  }, \"\\uC120\\uD0DD \\uC815\\uB82C\"), mdx(SorterControl, {\n    algorithm: \"selection\",\n    height: 220,\n    mdxType: \"SorterControl\"\n  })), mdx(Bluewings.Column, {\n    args: [\"4\"],\n    layoutFixed: true,\n    xs: undefined,\n    style: {}\n  }, mdx(\"h2\", {\n    style: {\n      textAlign: 'center',\n      margin: '1rem'\n    }\n  }, \"\\uC0BD\\uC785 \\uC815\\uB82C\"), mdx(SorterControl, {\n    algorithm: \"insertion\",\n    height: 220,\n    mdxType: \"SorterControl\"\n  }))), mdx(\"hr\", null), mdx(\"h2\", {\n    \"id\": \"버블-정렬-smallbubble-sortsmall\"\n  }, \"\\uBC84\\uBE14 \\uC815\\uB82C \", mdx(\"small\", null, \"bubble sort\")), mdx(Bluewings.Row, null, mdx(Bluewings.Column, {\n    args: [],\n    layoutFixed: true,\n    xs: undefined,\n    style: {}\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"function bubbleSort(arr: number[]) {\\n  for (let i = 0; i < arr.length; i++) {\\n    for (let j = 1; j < arr.length - i; j++) {\\n      if (arr[j] < arr[j - 1]) {\\n        const temp = arr[j - 1];\\n        arr[j - 1] = arr[j];\\n        arr[j] = temp;\\n      }\\n    }\\n  }\\n  return arr;\\n}\\n\"))), mdx(Bluewings.Column, {\n    args: [],\n    layoutFixed: true,\n    xs: undefined,\n    style: {}\n  }, mdx(SorterControl, {\n    mdxType: \"SorterControl\"\n  }))), mdx(\"h2\", {\n    \"id\": \"선택-정렬-smallselection-sortsmall\"\n  }, \"\\uC120\\uD0DD \\uC815\\uB82C \", mdx(\"small\", null, \"selection sort\")), mdx(Bluewings.Row, null, mdx(Bluewings.Column, {\n    args: [],\n    layoutFixed: true,\n    xs: undefined,\n    style: {}\n  }, mdx(SorterControl, {\n    mdxType: \"SorterControl\"\n  })), mdx(Bluewings.Column, {\n    args: [],\n    layoutFixed: true,\n    xs: undefined,\n    style: {}\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"function selectionSort(arr: number[]) {\\n  for (let i = 0; i < arr.length - 1; i++) {\\n    let indexMin = i;\\n    for (let j = i + 1; j < arr.length; j++) {\\n      if (arr[j] < arr[indexMin]) {\\n        indexMin = j;\\n      }\\n    }\\n    const temp = arr[indexMin];\\n    arr[indexMin] = arr[i];\\n    arr[i] = temp;\\n  }\\n  return arr;\\n}\\n\")))), mdx(\"h2\", {\n    \"id\": \"삽입-정렬-smallinsertion-sortsmall\"\n  }, \"\\uC0BD\\uC785 \\uC815\\uB82C \", mdx(\"small\", null, \"insertion sort\")), mdx(Bluewings.Row, null, mdx(Bluewings.Column, {\n    args: [],\n    layoutFixed: true,\n    xs: undefined,\n    style: {}\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"function insertionSort(arr: number[]) {\\n  for (let index = 1; index < arr.length; index++) {\\n    let temp = arr[index];\\n    let aux = index - 1;\\n    while (aux >= 0 && arr[aux] > temp) {\\n      arr[aux + 1] = arr[aux];\\n      aux--;\\n    }\\n    arr[aux + 1] = temp;\\n  }\\n  return arr;\\n}\\n\"))), mdx(Bluewings.Column, {\n    args: [],\n    layoutFixed: true,\n    xs: undefined,\n    style: {}\n  })), mdx(\"p\", null, \"dfskfjskdf\"), mdx(\"hr\", null), mdx(\"h2\", {\n    \"id\": \"시각화-구현\"\n  }, \"\\uC2DC\\uAC01\\uD654 \\uAD6C\\uD604\"), mdx(\"p\", null, \"\\uC815\\uB82C \\uD568\\uC218\\uB97C \\uC2DC\\uAC01\\uD654\\uD558\\uAE30 \\uC704\\uD574 y\"), mdx(\"p\", null, \"dfskfjskdf\"), mdx(CodeWave, {\n    mdxType: \"CodeWave\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"function bubbleSort(arr: number[]) {\\n  for (let i = 0; i < arr.length; i++) {\\n    for (let j = 1; j < arr.length - i; j++) {\\n      if (arr[j] < arr[j - 1]) {\\n        const temp = arr[j - 1];\\n        arr[j - 1] = arr[j];\\n        arr[j] = temp;\\n      }\\n    }\\n  }\\n  return arr;\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"정렬-함수\"\n  }, \"\\uC815\\uB82C \\uD568\\uC218\"), mdx(\"h3\", {\n    \"id\": \"정렬-함수-1\"\n  }, \"\\uC815\\uB82C \\uD568\\uC218\"), mdx(\"p\", null, \"\\uADF8\\uB0E5 \\uC815\\uB82C\\uD568\\uC218\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"function* bubbleSort(arr: number[]) {\\n  for (let i = 0; i < arr.length; i++) {\\n    for (let j = 1; j < arr.length - i; j++) {\\n      if (arr[j] < arr[j - 1]) {\\n        const temp = arr[j - 1];\\n        arr[j - 1] = arr[j];\\n        arr[j] = temp;\\n      }\\n    }\\n  }\\n  return arr;\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"function\"\n  }, \"function*\"), mdx(\"p\", null, \"\\uADF8\\uB0E5 \\uC815\\uB82C\\uD568\\uC218\\uB97C generator \\uD568\\uC218\\uB85C \\uBCC0\\uACBD\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"function* bubbleSort(arr: number[]) {\\n  for (let i = 0; i < arr.length; i++) {\\n    for (let j = 1; j < arr.length - i; j++) {\\n      yield { type: 'compare' };\\n      if (arr[j] < arr[j - 1]) {\\n        const temp = arr[j - 1];\\n        arr[j - 1] = arr[j];\\n        arr[j] = temp;\\n        yield { type: 'swap', payload: [j, j - 1] };\\n      }\\n    }\\n  }\\n  return arr;\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"yield\"\n  }, \"yield\"), mdx(\"p\", null, \"\\uADF8\\uB0E5 \\uC815\\uB82C\\uD568\\uC218\\uB97C generator \\uD568\\uC218\\uB85C \\uBCC0\\uACBD\"), mdx(\"p\", null, \"\\uADF8\\uB0E5 \\uC815\\uB82C\\uD568\\uC218\\uB97C generator \\uD568\\uC218\\uB85C \\uBCC0\\uACBD\\n\\uADF8\\uB0E5 \\uC815\\uB82C\\uD568\\uC218\\uB97C generator \\uD568\\uC218\\uB85C \\uBCC0\\uACBD\"), mdx(\"p\", null, \"\\uADF8\\uB0E5 \\uC815\\uB82C\\uD568\\uC218\\uB97C generator \\uD568\\uC218\\uB85C \\uBCC0\\uACBD\\uADF8\\uB0E5 \\uC815\\uB82C\\uD568\\uC218\\uB97C generator \\uD568\\uC218\\uB85C \\uBCC0\\uACBD\"))));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"/sorting-algorithms-at-a-glance/test/","title":"한눈에 보는 단순 정렬 알고리즘","tags":[],"keywords":[],"date":"August 31, 2020","fields":{"langKey":"ko","filePath":"/content/posts/sorting-algorithms-at-a-glance/test.mdx"},"parent":{"__typename":"Mdx","frontmatter":{"max_width":"50rem"}}},"previous":{"id":"d84db4bb-ac5b-56ae-97e1-e7a8422ce2cb","excerpt":"지난 1월 20일 국내 첫 코로나바이러스감염증-1…","slug":"/covid-19-outbreak-trend/","title":"코로나-19","date":"May 01, 2020"},"next":{"id":"52384f42-0ea7-59cb-b294-73cb46c49d2b","excerpt":"제너레이터를 사용하여 대표적인 단순 정렬 알고리즘들을 시각화하였습니다.","slug":"/sorting-algorithms-at-a-glance/","title":"한눈에 보는 단순 정렬 알고리즘","date":"September 27, 2020"}},"pageContext":{"id":"6dd90293-74af-56f7-810f-bee4d5fc0e34","previousId":"d84db4bb-ac5b-56ae-97e1-e7a8422ce2cb","nextId":"52384f42-0ea7-59cb-b294-73cb46c49d2b","translations":[{"origin":"/sorting-algorithms-at-a-glance/test/","slug":"/sorting-algorithms-at-a-glance/test/","langKey":"ko"}],"editOnGithub":"https://github.com/bluewings/dev-dad/edit/master","disqusShortname":"dev-dad","langKey":"ko","langKeyDefault":"ko"}}}