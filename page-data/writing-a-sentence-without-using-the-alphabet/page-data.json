{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/writing-a-sentence-without-using-the-alphabet/","webpackCompilationHash":"1f17a452254dc87297a1","result":{"data":{"site":{"siteMetadata":{"title":"아빠는 개발자","titleEn":"Dev Dad","author":"Cha Sung Won","social":{"disqusShortname":"dev-dad"},"github":{"owner":"bluewings","repository":"dev-dad"}}},"mdx":{"id":"b3bb0ada-9fc9-51cb-a69e-5d724df6f6a2","excerpt":"믿기 어렵겠지만, 위의 코드를 브라우저 개발자 콘솔에서 실행해보면  incredible…","code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-javascript\"\n      }\n    }, `(+!![] / +![] + [])[!+[] + !+[] + !+[]] + \n  (+!![] / +![] + [])[+!+[]] + \n  (![] + {})[+!+[] + [+[]]] + \n  (!![] + [])[+!+[]] + \n  (!![] + [])[!+[] + !+[] + !+[]] + \n  ([][[]] + [])[!+[] + !+[]] + \n  (+!![] / +![] + [])[!+[] + !+[] + !+[]] + \n  ([] + {})[!+[] + !+[]] + \n  (![] + [])[!+[] + !+[]] + \n  (!![] + [])[!+[] + !+[] + !+[]]\n// -> 'incredible'\n`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `믿기 어렵겠지만, 위의 코드를 브라우저 개발자 콘솔에서 실행해보면 `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `incredible`), ` 이 표시되는데, 이는 버그가 아니라 자바스크립트의 이상한(?) 특성들을 교묘하게 사용한 정상적인 코드이다.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `저 이상한 코드는 자바스크립트의 형 변환, 덧셈 등을 이용하여 숨겨진 메시지를 표시한다.`), React.createElement(MDXTag, {\n      name: \"hr\",\n      components: components\n    }), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `이상한 자바스크립트 코드 생성기`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `아래 입력창에 메시지를 입력하면 특수문자만으로 작성된 이상한 자바스크립트 코드가 생성됩니다. 생성된 코드를 브라우저의 개발자 도구 또는 node.js REPL 환경에서 실행해보면 원본 메시지를 확인할 수 있습니다.`), React.createElement(Generator, {\n      placeholder: \"\\uBCC0\\uD658\\uD560 \\uD14D\\uC2A4\\uD2B8\\uB97C \\uC9C1\\uC811 \\uC785\\uB825\\uD558\\uAC70\\uB098, \\uC544\\uB798\\uC5D0\\uC11C \\uC120\\uD0DD\\uD558\\uC138\\uC694.\"\n    }), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `간단한 설명`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `줄바꿈 처리된 결과 코드의 각 라인에는 일정한 패턴이 보입니다.`), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-js\"\n      }\n    }, `([]+{})[!+[]+!+[]] == ( []+{} )[ !+[]+!+[] ]  // 'b'\n([]+{})[+!+[]]     == ( []+{} )[ +!+[] ]      // 'o'\n(+{}+[])[+!+[]]    == ( +{}+[] )[ +!+[] ]     // 'a'\n(!![]+[])[+[]]     == ( !![]+[] )[ +[] ]      // 't'\n// ( string )[ n ]\n`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `위와 같은 방법으로 임의의 문자열에서 n 번째 인덱스의 문자를 가져올 수 있고,\n재료(?)가 되는 문자열과 숫자는 아래의 방법으로 얻어서 사용할 수 있습니다.`), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-js\"\n      }\n    }, `+![]            // 0\n+!![]           // 1\n!![]            // true\n![]             // false\n[][[]]          // undefined\n+!![] / +![]    // Infinity\n[] + {}         // \"[object Object]\"\n+{}             // NaN\n`)), React.createElement(MDXTag, {\n      name: \"hr\",\n      components: components\n    }), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `이 포스트는 `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://github.com/denysdovhan/wtfjs#its-a-fail\"\n      }\n    }, `What the f*ck JavaScript?`), ` 에서 영감을 얻었습니다.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `변환의 원리는 위 글에서 자세하게 설명하고 있으며, 코드 생성기 결과의 설명 주석을 참고하시면 더 쉽게 이해할 수 있습니다.`), React.createElement(MDXTag, {\n      name: \"hr\",\n      components: components\n    }), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `다음 글: `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"/writing-a-sentence-without-using-the-alphabet-part-2/\"\n      }\n    }, `알파벳 없이 문장 쓰기 - 파트 2`)));\n  }\n\n}\nMDXContent.isMDXComponent = true;"},"frontmatter":{"title":"알파벳 없이 문장 쓰기","date":"July 20, 2019","max_width":null},"fields":{"slug":"/writing-a-sentence-without-using-the-alphabet/","langKey":"ko"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/writing-a-sentence-without-using-the-alphabet/","previous":{"fields":{"slug":"/playing-with-fonts/","langKey":"ko","directoryName":"playing-with-fonts","fileExt":"mdx"},"frontmatter":{"title":"폰트를 가지고 놀기"}},"next":{"fields":{"slug":"/writing-a-sentence-without-using-the-alphabet-part-2/","langKey":"ko","directoryName":"writing-a-sentence-without-using-the-alphabet-part-2","fileExt":"mdx"},"frontmatter":{"title":"알파벳 없이 문장 쓰기 - 파트 2"}},"translations":["en"],"fileExt":"mdx"}}}