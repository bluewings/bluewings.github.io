{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/en/writing-a-sentence-without-using-the-alphabet/","webpackCompilationHash":"c154df079943ece22caf","result":{"data":{"site":{"siteMetadata":{"title":"아빠는 개발자","author":"Cha Sung Won","social":{"disqusShortname":"dev-dad"},"github":{"owner":"bluewings","repository":"dev-dad"}}},"mdx":{"id":"569ae4bc-bb80-585a-b84f-d39f0f10b34f","excerpt":"It's hard to believe, but when you run the above code on the browser's developer console, you'll see  incredible . This is not a bug, and it's normal code that…","code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-javascript\"\n      }\n    }, `(+!![] / +![] + [])[!+[] + !+[] + !+[]] + \n  (+!![] / +![] + [])[+!+[]] + \n  (![] + {})[+!+[] + [+[]]] + \n  (!![] + [])[+!+[]] + \n  (!![] + [])[!+[] + !+[] + !+[]] + \n  ([][[]] + [])[!+[] + !+[]] + \n  (+!![] / +![] + [])[!+[] + !+[] + !+[]] + \n  ([] + {})[!+[] + !+[]] + \n  (![] + [])[!+[] + !+[]] + \n  (!![] + [])[!+[] + !+[] + !+[]]\n// -> 'incredible'\n`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `It’s hard to believe, but when you run the above code on the browser’s developer console, you’ll see `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `incredible`), `. This is not a bug, and it’s normal code that uses tricky JavaScript features.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `That weird code displays the message using JavaScript’s type conversion in addition.`), React.createElement(MDXTag, {\n      name: \"hr\",\n      components: components\n    }), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Weird JavaScript generator`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Enter the message to be converted in the input form below. Then copy the generated weird code to the clipboard and run it in the browser’s developer console or node.js REPL environment to view the original message.`), React.createElement(\"gatsby--context\", {\n      key: \"gatsby-snippet-0\",\n      args: [],\n      params: {}\n    }), React.createElement(Context, null, ({\n      setValue\n    }) => {\n      const handleChange = ({\n        text,\n        code,\n        skipped,\n        newLine\n      }) => {\n        setValue('code', code);\n        setValue('skipped', skipped);\n        setValue('newLine', newLine);\n      };\n\n      return React.createElement(Generator, {\n        onChange: handleChange,\n        placeholder: \"Please enter text to convert.\",\n        lang: \"en\"\n      });\n    }), React.createElement(Context, null, ({\n      value\n    }) => React.createElement(\"span\", null, React.createElement(Code, {\n      codeString: value.code || '',\n      language: \"javascript\",\n      lineWrap: !value.newLine,\n      clipboard: true\n    }), React.createElement(\"p\", null, \"Only numbers and alphabets are converted, but the following alphabets are not converted.\", React.createElement(\"br\", null), React.createElement(Skipped, {\n      skipped: value.skipped\n    })))), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `If you know how to convert the those alphabets, please let me know. thank you.`), React.createElement(\"gatsby--contextend\", {\n      key: \"gatsby-snippet-1\",\n      args: [],\n      params: {}\n    }), React.createElement(MDXTag, {\n      name: \"hr\",\n      components: components\n    }), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `This post was deeply inspired by `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://github.com/denysdovhan/wtfjs#its-a-fail\"\n      }\n    }, `What the f*ck JavaScript?`), `.`));\n  }\n\n}\nMDXContent.isMDXComponent = true;"},"frontmatter":{"title":"Writing a sentence without using the Alphabet","date":"July 20, 2019","max_width":null},"fields":{"slug":"/en/writing-a-sentence-without-using-the-alphabet/","langKey":"en"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/en/writing-a-sentence-without-using-the-alphabet/","previous":{"fields":{"slug":"/en/playing-with-fonts/","langKey":"en","directoryName":"playing-with-fonts","fileExt":"mdx"},"frontmatter":{"title":"Playing with Fonts"}},"next":null,"translations":["en"],"fileExt":"mdx"}}}