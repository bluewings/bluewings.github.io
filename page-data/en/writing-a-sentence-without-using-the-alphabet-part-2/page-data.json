{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/en/writing-a-sentence-without-using-the-alphabet-part-2/","webpackCompilationHash":"76c7e4d6d5dcc6120857","result":{"data":{"site":{"siteMetadata":{"title":"ÏïÑÎπ†Îäî Í∞úÎ∞úÏûê","titleEn":"Dev Dad","author":"Cha Sung Won","social":{"disqusShortname":"dev-dad"},"github":{"owner":"bluewings","repository":"dev-dad"}}},"mdx":{"id":"771bb05d-cb75-5f7f-953c-92b83dec0edc","excerpt":"Previous post:  Writing a sentence without using the Alphabet In my previous post, I wrote that I couldn't make some characters, but I found  one that suggested‚Ä¶","code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Previous post: `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"/en/writing-a-sentence-without-using-the-alphabet/\"\n      }\n    }, `Writing a sentence without using the Alphabet`)), React.createElement(MDXTag, {\n      name: \"hr\",\n      components: components\n    }), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `In my previous post, I wrote that I couldn‚Äôt make some characters, but I found `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"http://patriciopalladino.com/blog/2012/08/09/non-alphanumeric-javascript.html\"\n      }\n    }, `one that suggested a solution to the problem`), ` within a few days. And there was already an implementation that created JavaScript code with only six characters `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `(`), ` `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `)`), ` `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `+`), ` `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `[`), ` `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `]`), ` `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `!`), `. `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"http://patriciopalladino.com/files/hieroglyphy/\"\n      }\n    }, `Hieroglyphy`), `, `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"http://www.jsfuck.com/\"\n      }\n    }, `JSF*ck`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `I was a bit sad that there was already such a code converter, but the content was so interesting that I implemented it myself.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Enter text below to convert all characters, including alphabets and numbers, into code.`), React.createElement(GeneratorV2, {\n      lang: \"en\"\n    }), React.createElement(MDXTag, {\n      name: \"hr\",\n      components: components\n    }), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Below is a solution from ‚Äô`, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"http://patriciopalladino.com/blog/2012/08/09/non-alphanumeric-javascript.html\"\n      }\n    }, `Non alphanumeric JavaScript`), `‚Äô. The code generator above converts the characters to codes using the following process.`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Master Key üîë`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `You can use the `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/unescape\"\n      }\n    }, `unescape()`), ` function as a master key to generate any character.`), React.createElement(MDXTag, {\n      name: \"blockquote\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"blockquote\"\n    }, `The `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `unescape()`), ` function computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.`)), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-javascript{7-8}\"\n      }\n    }, `/**\n * @param {string} str - A string to be decoded.\n * @return {string} A new string in which certain characters have been unescaped.\n * @example unescape(str)\n */\n\nunescape('abc123');         // \"abc123\"\nunescape('%uC548%uB155');   // \"ÏïàÎÖï\"\nunescape('%uD83D%uDC4B');   // \"üëã\"\n`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `As shown in the example above, you can create any character you want with the `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `unescape`), ` function and the `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `% + HEXA_ASCII_VALUE`), ` value. But to execute that function, two things must be solved.`), React.createElement(MDXTag, {\n      name: \"ol\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"li\"\n    }, `Convert string to executable script`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"li\"\n    }, `Two characters `, React.createElement(\"code\", null, `p`), ` and `, React.createElement(\"code\", null, `%`), ` are required to create the script `, React.createElement(\"code\", null, `unesca`, React.createElement(\"span\", {\n      style: {\n        \"color\": \"red\"\n      }\n    }, `p`), `e(‚Äô`, React.createElement(\"span\", {\n      style: {\n        \"color\": \"red\"\n      }\n    }, `%`), `41‚Äô)`), React.createElement(\"br\", null), `The remaining characters can be obtained by the method described in the `, React.createElement(\"a\", {\n      href: \"/en/writing-a-sentence-without-using-the-alphabet/\"\n    }, `previous post`), `.`))), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `1. Convert string to executable script`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `The `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Function\"\n      }\n    }, `Function`), ` constructor lets you create an executable function.`), React.createElement(MDXTag, {\n      name: \"blockquote\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"blockquote\"\n    }, `The `, React.createElement(MDXTag, {\n      name: \"strong\",\n      components: components,\n      parentName: \"p\"\n    }, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"strong\"\n    }, `Function`), ` constructor`), ` creates a new `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `Function`), ` `, React.createElement(MDXTag, {\n      name: \"strong\",\n      components: components,\n      parentName: \"p\"\n    }, `object`), `. Calling the constructor directly can create functions dynamically.`)), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-javascript{8}\"\n      }\n    }, `/**\n * @param {string} arg1, arg1, ...argN\n * @param {string} functionBody\n * @return {function} executable function.\n * @example var sum = Function('a', 'b', 'return a + b');\n */\n\nFunction('return unescape')     // ∆í anonymous() { return unescape }\nFunction('return unescape')()   // ∆í unescape() { [native code] }\n`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `The Function constructor can be obtained in the following way.`), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-js\"\n      }\n    }, `({}).constructor.constructor    // ∆í Function() { [native code] }\n`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Each character in `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `constructor`), ` can be obtained by the method of the previous post. So you can get Function constructor with code like below.`), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-javascript{6-12}\"\n      }\n    }, `({})\n  .constructor          // ∆í Object() { [native code] }\n  .constructor          // ∆í Function() { [native code] }\n,\n({})['constructor']['constructor']\n,\n({})[\n  // 'constructor'\n  (![]+{})[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+(![]+{})[+!![]+[+[]]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]\n][\n  // 'constructor'\n  (![]+{})[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+(![]+{})[+!![]+[+[]]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]\n]\n// -> ∆í Function() { [native code] }\n`)), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `2. Get ‚Äòp‚Äô and ‚Äô%‚Äô`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `You can get `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `p`), ` and `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `%`), ` with Function constructor obtained in step 1.`), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Get ‚Äòp‚Äô`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `You can get the address of your current website using the `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://developer.mozilla.org/docs/Web/API/Location\"\n      }\n    }, `Location`), ` interface.`), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-javascript\"\n      }\n    }, `location              // Location { ... }\nlocation.href         // 'https://...'\nlocation.toString()   // 'https://...'\nlocation + []         // 'https://...'\n`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `The fourth character of the Internet Address Protocol is `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `p`), `. (`, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `http:`), `, `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `https:`), `)`), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-javascript\"\n      }\n    }, `({})\n  .constructor          // ∆í Object() { [native code] }\n  .constructor          // ∆í Function() { [native code] }\n  ('return location')   // ∆í anonymous() { return location }\n  ()                    // Location { ... }\n  + []                  // \"https://...\"\n,\n({})['constructor']['constructor']('return location')() + []\n,\n// ({})['constructor']['constructor']\n({})[(![]+{})[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+(![]+{})[+!![]+[+[]]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]][(![]+{})[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+(![]+{})[+!![]+[+[]]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]]\n(\n  // 'return location'\n  (!![]+[])[+!![]]+([]+{})[+!![]+[+!![]]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+(+{}+{})[+!![]+[+[]]]+(![]+[])[!+[]+!![]]+([]+{})[+!![]]+(![]+{})[+!![]+[+[]]]+(![]+[])[+!![]]+(!![]+[])[+[]]+(![]+[]+[][[]])[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]]\n)() + []\n// -> 'https://...'\n`)), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-javascript\"\n      }\n    }, `// 'https://...'\n(({})[(![]+{})[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+(![]+{})[+!![]+[+[]]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]][(![]+{})[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+(![]+{})[+!![]+[+[]]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]]\n((!![]+[])[+!![]]+([]+{})[+!![]+[+!![]]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+(+{}+{})[+!![]+[+[]]]+(![]+[])[!+[]+!![]]+([]+{})[+!![]]+(![]+{})[+!![]+[+[]]]+(![]+[])[+!![]]+(!![]+[])[+[]]+(![]+[]+[][[]])[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]]\n)()+[])\n// [3]\n[!+[] + !![] + !![]]\n// ('https://...')[3] -> 'p'\n`)), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Get ‚Äô%‚Äô`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Use the `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/escape\"\n      }\n    }, `escape()`), ` function as follows: Just get the first character of the result.`), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-javascript\"\n      }\n    }, `escape('[')    // '%5B'\n`)), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-javascript\"\n      }\n    }, `({})\n  .constructor          // ∆í Object() { [native code] }\n  .constructor          // ∆í Function() { [native code] }\n  ('return escape')     // ∆í anonymous() { return escape }\n  ()                    // ∆í escape() { [native code] }\n  ('[')                 // \"%5B\"\n,\n({})['constructor']['constructor']('return escape')()('[')\n,\n// ({})['constructor']['constructor']\n({})[(![]+{})[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+(![]+{})[+!![]+[+[]]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]][(![]+{})[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+(![]+{})[+!![]+[+[]]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]]\n(\n  // 'return escape'\n  (!![]+[])[+!![]]+([]+{})[+!![]+[+!![]]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+(+{}+{})[+!![]+[+[]]]+([]+{})[+!![]+[+!![]]]+(![]+[])[!+[]+!![]+!![]]+(![]+{})[+!![]+[+[]]]+(![]+[])[+!![]]+(({})[(![]+{})[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+(![]+{})[+!![]+[+[]]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]][(![]+{})[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+(![]+{})[+!![]+[+[]]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([]+{})[+!![]+[+!![]]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+(+{}+{})[+!![]+[+[]]]+(![]+[])[!+[]+!![]]+([]+{})[+!![]]+(![]+{})[+!![]+[+[]]]+(![]+[])[+!![]]+(!![]+[])[+[]]+(![]+[]+[][[]])[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]])()+[])[+(!+[]+!![]+!![])]+([]+{})[+!![]+[+!![]]]\n)()(\n  // '['\n  ([]+{})[+[]]\n)\n// -> '%5B'\n`)), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-javascript\"\n      }\n    }, `// '%5B'\n({})[(![]+{})[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+(![]+{})[+!![]+[+[]]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]][(![]+{})[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+(![]+{})[+!![]+[+[]]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([]+{})[+!![]+[+!![]]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+(+{}+{})[+!![]+[+[]]]+([]+{})[+!![]+[+!![]]]+(![]+[])[!+[]+!![]+!![]]+(![]+{})[+!![]+[+[]]]+(![]+[])[+!![]]+(({})[(![]+{})[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+(![]+{})[+!![]+[+[]]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]][(![]+{})[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+(![]+{})[+!![]+[+[]]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([]+{})[+!![]+[+!![]]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+(+{}+{})[+!![]+[+[]]]+(![]+[])[!+[]+!![]]+([]+{})[+!![]]+(![]+{})[+!![]+[+[]]]+(![]+[])[+!![]]+(!![]+[])[+[]]+(![]+[]+[][[]])[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]])()+[])[+(!+[]+!![]+!![])]+([]+{})[+!![]+[+!![]]])()(([]+{})[+[]])\n// [0]\n[+[]]\n// ('%5B')[0] -> '%'\n`)), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `3. unescape function`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Finally, you can get the `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/unescape\"\n      }\n    }, `unescape()`), ` function,`), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-javascript\"\n      }\n    }, `({})\n  .constructor          // ∆í Object() { [native code] }\n  .constructor          // ∆í Function() { [native code] }\n  ('return unescape')   // ∆í anonymous() { return escape }\n  ()                    // ∆í unescape() { [native code] }\n,\n({})[(![]+{})[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+(![]+{})[+!![]+[+[]]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]][(![]+{})[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+(![]+{})[+!![]+[+[]]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([]+{})[+!![]+[+!![]]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+(+{}+{})[+!![]+[+[]]]+([][[]]+[])[+[]]+([][[]]+[])[+!![]]+([]+{})[+!![]+[+!![]]]+(![]+[])[!+[]+!![]+!![]]+(![]+{})[+!![]+[+[]]]+(![]+[])[+!![]]+(({})[(![]+{})[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+(![]+{})[+!![]+[+[]]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]][(![]+{})[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+(![]+{})[+!![]+[+[]]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([]+{})[+!![]+[+!![]]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+(+{}+{})[+!![]+[+[]]]+(![]+[])[!+[]+!![]]+([]+{})[+!![]]+(![]+{})[+!![]+[+[]]]+(![]+[])[+!![]]+(!![]+[])[+[]]+(![]+[]+[][[]])[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]])()+[])[!+[]+!![]+!![]]+([]+{})[+!![]+[+!![]]])()\n`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Now you can create any character you want.`), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-javascript\"\n      }\n    }, `unescape('%ud83c%udf7a')  // \"üç∫\"\n,\n({})[(![]+{})[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+(![]+{})[+!![]+[+[]]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]][(![]+{})[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+(![]+{})[+!![]+[+[]]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([]+{})[+!![]+[+!![]]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+(+{}+{})[+!![]+[+[]]]+([][[]]+[])[+[]]+([][[]]+[])[+!![]]+([]+{})[+!![]+[+!![]]]+(![]+[])[!+[]+!![]+!![]]+(![]+{})[+!![]+[+[]]]+(![]+[])[+!![]]+(({})[(![]+{})[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+(![]+{})[+!![]+[+[]]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]][(![]+{})[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+(![]+{})[+!![]+[+[]]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([]+{})[+!![]+[+!![]]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+(+{}+{})[+!![]+[+[]]]+(![]+[])[!+[]+!![]]+([]+{})[+!![]]+(![]+{})[+!![]+[+[]]]+(![]+[])[+!![]]+(!![]+[])[+[]]+(![]+[]+[][[]])[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]])()+[])[!+[]+!![]+!![]]+([]+{})[+!![]+[+!![]]])()\n(\n  (({})[(![]+{})[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+(![]+{})[+!![]+[+[]]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]][(![]+{})[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+(![]+{})[+!![]+[+[]]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([]+{})[+!![]+[+!![]]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+(+{}+{})[+!![]+[+[]]]+([]+{})[+!![]+[+!![]]]+(![]+[])[!+[]+!![]+!![]]+(![]+{})[+!![]+[+[]]]+(![]+[])[+!![]]+(({})[(![]+{})[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+(![]+{})[+!![]+[+[]]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]][(![]+{})[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+(![]+{})[+!![]+[+[]]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([]+{})[+!![]+[+!![]]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+(+{}+{})[+!![]+[+[]]]+(![]+[])[!+[]+!![]]+([]+{})[+!![]]+(![]+{})[+!![]+[+[]]]+(![]+[])[+!![]]+(!![]+[])[+[]]+(![]+[]+[][[]])[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]])()+[])[+(!+[]+!![]+!![])]+([]+{})[+!![]+[+!![]]])()(([]+{})[+[]]))[+[]]+([][[]]+[])[+[]]+([][[]]+[])[!+[]+!![]]+((!+[]+!![])**(!+[]+!![]+!![])+[!+[]+!![]+!![]])+(![]+{})[+!![]+[+[]]]+(({})[(![]+{})[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+(![]+{})[+!![]+[+[]]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]][(![]+{})[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+(![]+{})[+!![]+[+[]]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([]+{})[+!![]+[+!![]]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+(+{}+{})[+!![]+[+[]]]+([]+{})[+!![]+[+!![]]]+(![]+[])[!+[]+!![]+!![]]+(![]+{})[+!![]+[+[]]]+(![]+[])[+!![]]+(({})[(![]+{})[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+(![]+{})[+!![]+[+[]]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]][(![]+{})[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+(![]+{})[+!![]+[+[]]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([]+{})[+!![]+[+!![]]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+(+{}+{})[+!![]+[+[]]]+(![]+[])[!+[]+!![]]+([]+{})[+!![]]+(![]+{})[+!![]+[+[]]]+(![]+[])[+!![]]+(!![]+[])[+[]]+(![]+[]+[][[]])[+!![]+[+[]]]+([]+{})[+!![]]+([][[]]+[])[+!![]])()+[])[+(!+[]+!![]+!![])]+([]+{})[+!![]+[+!![]]])()(([]+{})[+[]]))[+[]]+([][[]]+[])[+[]]+([][[]]+[])[!+[]+!![]]+(![]+[])[+[]]+((+!![]+[+[]])-(!+[]+!![]+!![]))+(![]+[])[+!![]]\n)\n// unescape('%ud83c%udf7a') -> 'üç∫'\n`)), React.createElement(MDXTag, {\n      name: \"hr\",\n      components: components\n    }), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `It‚Äôs really useless to look back after making it, but it was very fun.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `If you are interested in this topic, please also see the following resources.`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://github.com/denysdovhan/wtfjs\"\n      }\n    }, `What the f*ck JavaScript?`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"http://patriciopalladino.com/files/hieroglyphy/\"\n      }\n    }, `Hieroglyphy`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"http://www.jsfuck.com/\"\n      }\n    }, `JSF*ck`))));\n  }\n\n}\nMDXContent.isMDXComponent = true;"},"frontmatter":{"title":"Writing a sentence without using the Alphabet - Part 2","date":"August 04, 2019","max_width":null},"fields":{"slug":"/en/writing-a-sentence-without-using-the-alphabet-part-2/","langKey":"en"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/en/writing-a-sentence-without-using-the-alphabet-part-2/","previous":{"fields":{"slug":"/en/writing-a-sentence-without-using-the-alphabet/","langKey":"en","directoryName":"writing-a-sentence-without-using-the-alphabet","fileExt":"mdx"},"frontmatter":{"title":"Writing a sentence without using the Alphabet"}},"next":null,"translations":["en"],"fileExt":"mdx"}}}