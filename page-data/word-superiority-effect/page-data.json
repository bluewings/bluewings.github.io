{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/word-superiority-effect/","webpackCompilationHash":"c154df079943ece22caf","result":{"data":{"site":{"siteMetadata":{"title":"아빠는 개발자","author":"Cha Sung Won","social":{"disqusShortname":"dev-dad"},"github":{"owner":"bluewings","repository":"dev-dad"}}},"mdx":{"id":"9a1bfafd-88ee-5592-b3d4-9dcdadf4077d","excerpt":"옛날에 인터넷에 펌글로 돌아다니던 캠릿브지 대학의 연결구과 변환기를 만들어보았다.","code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `옛날에 인터넷에 펌글로 돌아다니던 `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://namu.wiki/w/%EC%BA%A0%EB%A6%BF%EB%B8%8C%EC%A7%80%20%EB%8C%80%ED%95%99%EC%9D%98%20%EC%97%B0%EA%B2%B0%EA%B5%AC%EA%B3%BC\"\n      }\n    }, `캠릿브지 대학의 연결구과`), ` 변환기를 만들어보았다.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `정말 심심하거나, 컴퓨터가 내 글을 수집해서 정리하는 게 싫을 때 사용하면 된다.`), React.createElement(MDXTag, {\n      name: \"hr\",\n      components: components\n    }), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `왼쪽에 입력하면 오른쪽에 변환 결과가 표시됩니다.`), React.createElement(Converter, null), React.createElement(MDXTag, {\n      name: \"hr\",\n      components: components\n    }), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `변환에 사용한 코드는 다음과 같습니다.`), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-js\"\n      }\n    }, `function jumble(word) {\n  const letters = word.match(/[\\\\s\\\\S]/g);\n  const [i1, i2] = letters\n    .map((e, i) => i)\n    .slice(1, -1)\n    .map((e) => [Math.random(), e])\n    .sort((a, b) => a[0] - b[0])\n    .map((e) => e[1]);\n  if (i1 && i2) {\n    const tmp = letters[i1];\n    letters[i1] = letters[i2];\n    letters[i2] = tmp;\n  }\n  return letters.join('');\n}\n\nfunction makeDifficult(text) {\n  return text.replace(/[가-힣]+/g, jumble);\n}\n`)));\n  }\n\n}\nMDXContent.isMDXComponent = true;"},"frontmatter":{"title":"'캠릿브지 대학의 연결구과' 변환기","date":"June 04, 2019","max_width":null},"fields":{"slug":"/word-superiority-effect/","langKey":"ko"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/word-superiority-effect/","previous":{"fields":{"slug":"/thanos-explained/","langKey":"ko","directoryName":"thanos-explained","fileExt":"mdx"},"frontmatter":{"title":"타노스 이스터 에그 들여다보기"}},"next":{"fields":{"slug":"/name-compatibility/","langKey":"ko","directoryName":"name-compatibility","fileExt":"mdx"},"frontmatter":{"title":"이름 궁합 계산기"}},"translations":[],"fileExt":"mdx"}}}