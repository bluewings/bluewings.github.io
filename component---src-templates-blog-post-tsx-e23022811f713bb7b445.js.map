{"version":3,"sources":["webpack:///./i18n.js","webpack:///./src/utils/i18n.ts","webpack:///./src/templates/BlogPost.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.ts","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Toggle/Toggle.tsx","webpack:///./src/components/Toggle/index.ts","webpack:///./src/components/Footer/Footer.tsx","webpack:///./src/components/Footer/index.ts","webpack:///./src/components/Layout/Layout.tsx","webpack:///./src/components/Layout/index.ts","webpack:///./src/components/SEO/SEO.tsx","webpack:///./src/components/SEO/index.ts","webpack:///./src/components/Bio/Bio.tsx","webpack:///./src/components/Bio/index.ts"],"names":["exports","supportedLanguages","en","ko","langKeyDefault","pagesPaths","codeToLanguage","code","replace","createLanguageLink","slug","lang","rawSlug","targetLang","Translations","props","translations","languageLink","editUrl","react_default","a","createElement","style","fontSize","border","borderRadius","padding","background","wordBreak","map","l","i","Fragment","key","gatsby_browser_entry","to","length","href","target","rel","BlogPostTemplate","location","_props$data","data","_props$data$site$site","site","siteMetadata","siteTitle","title","siteTitleEn","titleEn","disqusShortname","social","_props$data$site$site2","github","owner","repository","post","mdx","_props$pageContext","pageContext","previous","next","translations_","fileExt","fields","langKey","defaultSlug","slice","sort","b","Layout","maxWidth","frontmatter","max_width","SEO","description","excerpt","className","_objectSpread","scale","display","marginBottom","rhythm","marginTop","date","gatsby_mdx","body","Bio","flexWrap","justifyContent","listStyle","lib","shortname","config","identifier","id","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","query","render","finalData","children","Consumer","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","fontFamily","h1,h2,h3,h4,h5,h6","fontWeight","p",".date","googleFonts","typography","Typography","m","module","require","default","ProdPageRenderer","pageResources","InternalPageRenderer","json","useTheme","_useContext","useContext","ThemeContext","theme","setTheme","_useState","useState","window","__getPreferredTheme","err","hasPreferred","setHasPreferred","rotate","useRef","useMemo","remain","Math","abs","current","transform","newTheme","__toggleTheme","Toggle","_useTheme","toggleStyle","toggleTheme","button","type","styles","root","onClick","spinner","sun","xmlns","viewBox","moon","es","placement","visible","overlay","tooltipText","arrowContent","Footer","detailsQuery","links","Object","keys","filter","name","uri","link","react","_3346284184","header","isIndexPage","pathname","textDecoration","color","inner","marginLeft","marginRight","components_Toggle","components_Footer","meta","keywords","metaDescription","Helmet_default","htmlAttributes","titleTemplate","content","property","author","concat","join","_1025518380","defaultProps","bioQuery","_data$site$siteMetada","gatsby_image_default","fixed","avatar","childImageSharp","alt","minWidth","imgStyle","twitter","_4007731267"],"mappings":"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","file":"component---src-templates-blog-post-tsx-e23022811f713bb7b445.js","sourcesContent":["exports.supportedLanguages = {\n  en: 'English',\n  ko: '한국어',\n};\n\nexports.langKeyDefault = 'ko';\n\nexports.pagesPaths = ['/content/blog/'];\n","import { supportedLanguages, langKeyDefault } from '../../i18n';\n\n// This is kind of a mess for some languages.\n// Try to be as short as possible.\n// Make sure you use a real code (e.g. \"ja\", not \"jp\").\n// Some resources:\n// http://www.rfc-editor.org/rfc/bcp/bcp47.txt\n// https://www.w3.org/International/articles/language-tags/\n// https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\n// https://discuss.httparchive.org/t/what-are-the-invalid-uses-of-the-lang-attribute/1022\n// @ts-ignore\nexport const codeToLanguage = (code: string) => supportedLanguages[code].replace(/ /g, ' ' /* nbsp */);\n\n// TODO: the curried signature is weird.\nexport const createLanguageLink = (slug: any, lang: any) => {\n  const rawSlug = slug.replace(`${lang}/`, '');\n  return (targetLang: any) => (targetLang === langKeyDefault ? rawSlug : `${targetLang}${rawSlug}`);\n};\n\nexport const getLangKeyDefault = () => langKeyDefault;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport { MDXRenderer } from 'gatsby-mdx';\nimport { DiscussionEmbed } from 'disqus-react';\nimport Bio from '../components/Bio';\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport { rhythm, scale } from '../utils/typography';\nimport { codeToLanguage, createLanguageLink, getLangKeyDefault } from '../utils/i18n';\n\nconst langKeyDefault = getLangKeyDefault();\n\nfunction Translations(props: any) {\n  const { translations, lang, languageLink, editUrl } = props;\n  return (\n    <p\n      style={{\n        fontSize: '1em',\n        border: '1px solid var(--hr)',\n        borderRadius: '0.3em',\n        padding: '0.75em',\n        background: 'var(--translation-bg)',\n        wordBreak: 'keep-all',\n      }}\n    >\n      <span>Translated by readers into: </span>\n      {translations.map((l: any, i: number) => (\n        <React.Fragment key={l}>\n          {l === lang ? <b>{codeToLanguage(l)}</b> : <Link to={languageLink(l)}>{codeToLanguage(l)}</Link>}\n          {i === translations.length - 1 ? '' : ' • '}\n        </React.Fragment>\n      ))}\n      {lang !== langKeyDefault && (\n        <>\n          <br />\n          <Link to={languageLink(langKeyDefault)}>Read the original</Link>\n          {' • '}\n          <a href={editUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n            Improve this translation\n          </a>\n          {' • '}\n          <Link to={`/${lang}`}>View all translated posts</Link>{' '}\n        </>\n      )}\n    </p>\n  );\n}\n\nfunction BlogPostTemplate(props: any) {\n  const {\n    location,\n    data: {\n      site: {\n        siteMetadata: {\n          title: siteTitle,\n          titleEn: siteTitleEn,\n          social: { disqusShortname },\n          github: { owner, repository },\n        },\n      },\n      mdx: post,\n    },\n    pageContext: { slug, previous, next, translations: translations_, fileExt },\n  } = props;\n  const lang = post.fields.langKey;\n  const languageLink = createLanguageLink(slug, lang);\n  const defaultSlug = languageLink(langKeyDefault);\n  const editUrl = `https://github.com/${owner}/${repository}/edit/master/content/blog/${defaultSlug.slice(\n    1,\n    defaultSlug.length - 1,\n  )}/index${lang === langKeyDefault ? '' : `.${lang}`}.${fileExt}`;\n  const translations = translations_.slice();\n  translations.sort((a: any, b: any) => (codeToLanguage(a) < codeToLanguage(b) ? -1 : 1));\n  return (\n    <Layout\n      location={location}\n      lang={langKeyDefault !== lang ? lang : ''}\n      title={lang === 'en' ? siteTitleEn : siteTitle}\n      maxWidth={post.frontmatter.max_width}\n    >\n      <SEO title={post.frontmatter.title} description={post.excerpt} />\n      <h1>{post.frontmatter.title}</h1>\n      <p\n        className=\"date\"\n        style={{\n          ...scale(-1 / 5),\n          display: `block`,\n          marginBottom: rhythm(1),\n          marginTop: rhythm(-0.75),\n        }}\n      >\n        {post.frontmatter.date}\n      </p>\n      {translations.length > 0 && (\n        <Translations translations={translations} editUrl={editUrl} languageLink={languageLink} lang={lang} />\n      )}\n      <MDXRenderer>{post.code.body}</MDXRenderer>\n      <footer>\n        <p style={{ marginTop: rhythm(2.5) }}>\n          <a href={editUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n            Edit on GitHub\n          </a>\n        </p>\n      </footer>\n      <hr\n        style={{\n          marginBottom: rhythm(1),\n        }}\n      />\n      <Bio lang={langKeyDefault !== lang ? lang : ''} />\n\n      <ul\n        style={{\n          display: `flex`,\n          flexWrap: `wrap`,\n          justifyContent: `space-between`,\n          listStyle: `none`,\n          padding: 0,\n        }}\n      >\n        <li>\n          {previous && (\n            <Link to={previous.fields.slug} rel=\"prev\">\n              ← {previous.frontmatter.title}\n            </Link>\n          )}\n        </li>\n        <li>\n          {next && (\n            <Link to={next.fields.slug} rel=\"next\">\n              {next.frontmatter.title} →\n            </Link>\n          )}\n        </li>\n      </ul>\n      {disqusShortname && (\n        <DiscussionEmbed\n          shortname={disqusShortname}\n          config={{\n            identifier: post.id,\n            title: post.frontmatter.title,\n          }}\n        />\n      )}\n    </Layout>\n  );\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        titleEn\n        author\n        social {\n          disqusShortname\n        }\n        github {\n          owner\n          repository\n        }\n      }\n    }\n    mdx(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      code {\n        body\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        max_width\n      }\n      fields {\n        slug\n        langKey\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import Typography from 'typography';\nimport Wordpress2016 from 'typography-theme-wordpress-2016';\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n    },\n    body: {\n      // fontFamily: `Merriweather, 'Noto Serif KR', Georgia, serif`,\n      fontFamily: `'Open Sans', 'Gothic A1', 'Apple SD Gothic NEO', helvetica, sans-serif`,\n    },\n    'h1,h2,h3,h4,h5,h6': {\n      fontFamily: `Montserrat, Black Han Sans`,\n      fontWeight: 'normal',\n      wordBreak: 'keep-all',\n    },\n    p: {\n      wordBreak: 'keep-all',\n    },\n    '.date': {\n      fontFamily: `'Montserrat SemiBold', 'Apple SD Gothic NEO', helvetica, sans-serif`,\n    },\n  };\n};\n\ndelete Wordpress2016.googleFonts;\n\nconst typography = new Typography(Wordpress2016);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles();\n}\n\nconst { rhythm, scale } = typography;\n\nexport default typography;\nexport { rhythm, scale };\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { useContext, useRef, useMemo, useState } from 'react';\nimport Tooltip from 'rc-tooltip';\nimport { Context as ThemeContext } from '../../utils/theme-context';\nimport styles from './Toggle.module.scss';\n\nfunction __toggleTheme() {\n  try {\n    // @ts-ignore\n    return window.__toggleTheme();\n  } catch (err) {\n    /* ignore */\n  }\n  return '';\n}\n\nfunction __getPreferredTheme() {\n  try {\n    // @ts-ignore\n    return window.__getPreferredTheme();\n  } catch (err) {\n    /* ignore */\n  }\n  return '';\n}\n\nfunction useTheme() {\n  const { theme, setTheme }: any = useContext(ThemeContext);\n\n  const [hasPreferred, setHasPreferred] = useState(!!__getPreferredTheme());\n\n  const rotate = useRef(0);\n\n  const toggleStyle = useMemo(() => {\n    const remain = Math.abs(rotate.current % 360);\n    if ((theme === 'light' && remain === 0) || (theme === 'dark' && remain === 180)) {\n      rotate.current -= 180;\n    }\n    return { transform: `rotate(${rotate.current}deg)` };\n  }, [theme]);\n\n  const toggleTheme: any = () => {\n    const newTheme = __toggleTheme();\n    setHasPreferred(true);\n    setTheme(newTheme);\n  };\n\n  return [toggleStyle, toggleTheme, hasPreferred];\n}\n\nconst Toggle = () => {\n  const [toggleStyle, toggleTheme, hasPreferred] = useTheme();\n\n  const button = (\n    <button type=\"button\" className={styles.root} onClick={toggleTheme}>\n      <div className={styles.spinner} style={toggleStyle}>\n        <svg className={styles.sun} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n          <path d=\"M277.3 32h-42.7v64h42.7V32zm129.1 43.7L368 114.1l29.9 29.9 38.4-38.4-29.9-29.9zm-300.8 0l-29.9 29.9 38.4 38.4 29.9-29.9-38.4-38.4zM256 128c-70.4 0-128 57.6-128 128s57.6 128 128 128 128-57.6 128-128-57.6-128-128-128zm224 106.7h-64v42.7h64v-42.7zm-384 0H32v42.7h64v-42.7zM397.9 368L368 397.9l38.4 38.4 29.9-29.9-38.4-38.4zm-283.8 0l-38.4 38.4 29.9 29.9 38.4-38.4-29.9-29.9zm163.2 48h-42.7v64h42.7v-64z\" />\n        </svg>\n        <svg className={styles.moon} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n          <path d=\"M195 125c0-26.3 5.3-51.3 14.9-74.1C118.7 73 51 155.1 51 253c0 114.8 93.2 208 208 208 97.9 0 180-67.7 202.1-158.9-22.8 9.6-47.9 14.9-74.1 14.9-106 0-192-86-192-192z\" />\n        </svg>\n      </div>\n    </button>\n  );\n\n  return (\n    <div>\n      {!hasPreferred ? (\n        <Tooltip\n          placement=\"bottom\"\n          visible\n          overlay={<span className={styles.tooltipText}>Dark Mode</span>}\n          arrowContent={<div className=\"rc-tooltip-arrow-inner\" />}\n        >\n          {button}\n        </Tooltip>\n      ) : (\n        button\n      )}\n    </div>\n  );\n};\n\nexport default Toggle;\n","import Toggle from './Toggle';\n\nexport default Toggle;\n","import React, { Fragment } from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport { rhythm } from '../../utils/typography';\n\nfunction Footer() {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={(data) => {\n        const { social } = data.site.siteMetadata;\n        const links = Object.keys(social)\n          .filter((name) => social[name])\n          .map((name) => ({ name, uri: social[name] }));\n        return (\n          <footer style={{ marginTop: rhythm(2) }}>\n            {links.map((link, i) => {\n              return (\n                <Fragment key={link.name}>\n                  {i > 0 && <> &bull; </>}\n                  <a href={link.uri} target=\"_blank\" rel=\"noopener noreferrer\">\n                    {link.name}\n                  </a>\n                </Fragment>\n              );\n            })}\n          </footer>\n        );\n      }}\n    />\n  );\n}\n\nexport default Footer;\n\nconst detailsQuery = graphql`\n  query FooterQuery {\n    site {\n      siteMetadata {\n        social {\n          twitter\n          github\n          stackOverflow\n          facebook\n        }\n      }\n    }\n  }\n`;\n","import Footer from './Footer';\n\nexport default Footer;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport { rhythm, scale } from '../../utils/typography';\nimport Toggle from '../Toggle';\nimport Footer from '../Footer';\nimport styles from './Layout.module.scss';\nimport '../../styles/common.css';\nimport '../../styles/tooltip.scss';\n\nfunction Layout(props: any) {\n  const { location, lang, title, children, maxWidth, isIndexPage } = props;\n  // @ts-ignore\n  const rootPath = `${__PATH_PREFIX__}/`;\n  let header;\n\n  if (location.pathname === rootPath || isIndexPage) {\n    header = (\n      <h1\n        style={{\n          ...scale(1.5),\n          marginBottom: rhythm(1.5),\n          marginTop: 0,\n        }}\n      >\n        <Link\n          style={{\n            boxShadow: `none`,\n            textDecoration: `none`,\n            color: `inherit`,\n          }}\n          to=\"/\"\n        >\n          {title}\n        </Link>\n      </h1>\n    );\n  } else {\n    header = (\n      <h3\n        style={{\n          marginTop: 0,\n        }}\n      >\n        <Link\n          style={{\n            boxShadow: `none`,\n            textDecoration: `none`,\n            color: `inherit`,\n          }}\n          to={`/${lang ? lang + '/' : ''}`}\n        >\n          {title}\n        </Link>\n      </h3>\n    );\n  }\n  return (\n    <div className={styles.root}>\n      <div\n        className={styles.inner}\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: maxWidth || rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>\n          {header}\n          <Toggle />\n        </header>\n        <main>{children}</main>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import Layout from './Layout';\n\nexport default Layout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }: any) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={(data) => {\n        const metaDescription = description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : [],\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  description: '',\n  lang: `en`,\n  meta: [],\n  keywords: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n","import SEO from './SEO';\n\nexport default SEO;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\nimport { rhythm } from '../../utils/typography';\n\nfunction Bio({ lang }: any) {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={(data) => {\n        const { author, social } = data.site.siteMetadata;\n        return (\n          <div\n            style={{\n              display: `flex`,\n              marginBottom: rhythm(2.5),\n            }}\n          >\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                marginRight: rhythm(1 / 2),\n                marginBottom: 0,\n                minWidth: 50,\n                borderRadius: `100%`,\n              }}\n              imgStyle={{\n                borderRadius: `50%`,\n              }}\n            />\n            <p style={{ marginTop: -3 }}>\n              {lang === 'en' ? (\n                <>\n                  I am a developer dad with a son who dreams of a developer.\n                  <br />\n                  I'm interested in data visualization and enjoy creating fun programs.\n                </>\n              ) : (\n                <>\n                  개발자를 꿈꾸는 아들을 둔 아빠 개발자입니다.\n                  <br />\n                  데이터 시각화에 관심이 있으며, 재미있는 프로그램을 만드는 것을 좋아합니다.\n                </>\n              )}\n              {` `}\n              {social.twitter && <a href={`https://twitter.com/${social.twitter}`}>You should follow him on Twitter</a>}\n            </p>\n          </div>\n        );\n      }}\n    />\n  );\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`;\n\nexport default Bio;\n","import Bio from './Bio';\n\nexport default Bio;\n"],"sourceRoot":""}